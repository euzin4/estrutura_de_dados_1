1)Implemente um programa, para alocar memória para um 
vetor. O número de posições do vetor será indicado via 
teclado, assim como o conteúdo das posições. Após a 
atribuição de valores às posições do vetor, o programa 
deve imprimir(na tela) as posições e seus conteúdos.

2) Altere o programa para armazenar uma estrutura em 
cada posição do vetor.
typedef struct{
char nome[50];
char endereco[100];
int matricula;
} estudante;

3. Altere o programa do exercício 1, de forma que receba números inteiros do usuário
indefinidamente. O programa finaliza quando o usuário entrar com o número 0.
a) Aloque, inicialmente, memória para 5 inteiros;
b) Caso o usuário entrar com mais inteiros, faça a realocação, alocando espaço para mais 5
inteiros e assim sucessivamente;

4. Crie uma função que receba como parâmetros dois vetores de inteiros, v1 e v2, e as suas
respectivas quantidades de elementos, n1 e n2. A função deverá retornar um ponteiro para
um terceiro vetor, v3, com capacidade para (n1 + n2) elementos, alocado dinamicamente,
contendo a união de v1 e v2.
Por exemplo, se v1 = {11, 13, 45, 7} e v2 = {24, 4, 16, 81, 10, 12}, v3 irá conter {11, 13,
45, 7, 24, 4, 16, 81, 10, 12}.
O cabeçalho dessa função deverá ser o seguinte:
int* uniao(int *v1, int n1, int *v2, int n2);
Em seguida, crie a função principal do programa para chamar a função união passando dois
vetores informados pelo usuário (ou declarados estaticamente). Em seguida, o programa
deve exibir na tela os elementos do vetor resultante. Não esqueça de liberar a memória
alocada dinamicamente.

RESPOSTAS:
exercicio 1

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int *x,val,i;
    scanf("%d", &val);
    x =(int *) malloc(sizeof(int) * val);
    if (!x)
    {
        printf ("ERRO: memoria insuficiente");
        exit;
    }
    for(i=0; i<val; i++)
        scanf("%d",&x[i]);

    for(i=0; i<val; i++)
        printf("\n%d",x[i]);
}


exercicio 2

#include <stdio.h>
#include <stdlib.h>

typedef struct
{
    char nome[50];
    char endereco[100];
    int matricula;
} estudante;

int main()
{
    int val,i;
    estudante *x;
    scanf("%d", &val);
    x =(estudante *) malloc(sizeof(int) * val);
    if (!x)
    {
        printf ("ERRO: memoria insuficiente");
        exit;
    }
    for(i=0; i<val; i++){
        scanf("%s",&x[i].nome);
        scanf("%s",&x[i].endereco);
        scanf("%d",&x[i].matricula);
    }
    for(i=0; i<val; i++){
        printf("\n\n%s",x[i].nome);
        printf("\n%s",x[i].endereco);
        printf("\n%d",x[i].matricula);
    }
}
